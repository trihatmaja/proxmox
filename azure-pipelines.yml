trigger:
  branches:
    include:
      - main

pool:
  name: 'self-hosted'

variables:
  TF_VAR_pm_user: $(PM_USER)
  TF_VAR_pm_password: $(PM_PASSWORD)
  TF_VAR_vm_username: $(VM_USERNAME)
  TF_VAR_vm_password: $(VM_PASSWORD)

stages:
  - stage: Plan
    jobs:
      - job: TerraformPlan
        displayName: Terraform Plan
        steps:
          - checkout: self

          - task: UseTerraform@0
            inputs:
              terraformVersion: '1.6.6'

          - script: terraform init
            workingDirectory: $(Build.SourcesDirectory)/proxmox-vm
            displayName: 'Terraform Init'

          - script: terraform plan -out=tfplan.binary
            workingDirectory: $(Build.SourcesDirectory)/proxmox-vm
            displayName: 'Terraform Plan'

          - publish: $(Build.SourcesDirectory)/proxmox-vm/tfplan.binary
            artifact: tfplan

  - stage: Apply
    dependsOn: Plan
    condition: succeeded()
    jobs:
      - deployment: TerraformApply
        displayName: Terraform Apply
        environment: proxmox-infra-prod  # <- Buat environment ini di Azure DevOps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - download: current
                  artifact: tfplan

                - task: UseTerraform@0
                  inputs:
                    terraformVersion: '1.6.6'

                - script: terraform init
                  workingDirectory: $(Build.SourcesDirectory)/proxmox-vm
                  displayName: 'Terraform Init'

                - script: terraform apply -auto-approve tfplan.binary
                  workingDirectory: $(Build.SourcesDirectory)/proxmox-vm
                  displayName: 'Terraform Apply'
