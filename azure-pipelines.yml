trigger:
  branches:
    include:
      - main

pool:
  name: 'self-hosted'

variables:
  TF_VAR_pm_user: $(PM_USER)
  TF_VAR_pm_password: $(PM_PASSWORD)
  TF_VAR_vm_username: $(VM_USERNAME)
  TF_VAR_vm_password: $(VM_PASSWORD)

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'

    - script: |
        terraform --version
        terraform init -backend-config="storage_account_name=$(storageAccountName)" -backend-config="container_name=$(containerName)" -backend-config="key=$(key)" -backend-config="access_key=$(accessKey)"
        terraform plan -out=tfplan
      displayName: 'Terraform Init and Plan'

  - stage: Apply
    dependsOn: Plan
    condition: succeeded()
    jobs:
      - deployment: TerraformApply
        displayName: Terraform Apply
        environment: proxmox-infra-prod  # <- Buat environment ini di Azure DevOps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - download: current
                  artifact: tfplan

                - task: TerraformInstaller@1
                  displayName: install terraform

                - task: TerraformCLI@1
                  displayName: 'terraform init'
                  inputs:
                    command: init

                - task: TerraformCLI@1
                  displayName: 'terraform plan'
                  inputs:
                    command: plan
                    commandOptions: '-out=$(System.DefaultWorkingDirectory)/tfplan.binary'

                - task: TerraformCLI@1
                  displayName: 'terraform apply'
                  inputs:
                    command: apply
                    commandOptions: '-auto-approve tfplan.binary'
                
